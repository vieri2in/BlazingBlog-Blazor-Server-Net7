@page "/posts/{slug}"
@inject CategoryService CategoryService
@inject BlogPostService PostService
<div class="container">
    <div class="row">
        <div class="col-sm-9">          
            @if (notFound)
            {
                <div class="d-flex justify-content-center flex-column align-items-center" style="min-height: 250px">
                    <h3>No blog post found</h3>
                    <NavLink href="/admin/manage-blogs/new">Click here to create a new blog post</NavLink>
                </div>
            }
            else if(post.Id > 0)
            {
                var color = Utinities.GetRandomColorClass();
                var categoryTitle = $"{post.CategoryName} Blog Posts";
                var categoryPostsLink = $"/c/{post.Category.Slug}/posts";
                <h1 class="fs-1 bg-@color text-white rounded p-5">@post.Title</h1>
                <small>
                    <label>
                        <NavLink href="@categoryPostsLink" class="text-decoration-none text-dark fs-5" title="@categoryTitle">@post.CategoryName</NavLink>
                    </label>
                    <label>
                        @post.PublishedOn!.Value.ToShortDateString()
                    </label>
                </small>
                <p class="fs-6">@post.Introduction</p>
                <hr/>
                <div class="main-content">
                    @((MarkupString)post.Content)
                </div>
            }
            else
            {
                <p class="fs-5">Loading blog posts...</p>
            }
        </div>
        <div class="col-sm-3">
            <CategoriesBox />
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string Slug { get; set; }
    private BlogPost post = new();
    private bool notFound = false;
    protected override async Task OnInitializedAsync()
    {
        if (!string.IsNullOrWhiteSpace(Slug))
        {
            var dbPost = await PostService.GetBlogPostBySlugAsync(Slug);
            if (dbPost is null)
            {
                notFound = true;
            }
            else
            {
                post = dbPost;
            }
        }
    }
}
