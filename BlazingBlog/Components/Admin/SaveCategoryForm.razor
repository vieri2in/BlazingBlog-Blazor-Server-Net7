@inject CategoryService CategoryService
<EditForm Model="_category" OnValidSubmit="SaveCategoryAsync">
    <DataAnnotationsValidator />
    <div class="card border-0">
        <div class="card-header bg-purple text-white d-flex justify-content-between align-items-center" style="min-width: 300px">
            <h4>Save Category</h4>
            <button type="button" class="btn btn-sm btn-danger" @onclick="CloseFormAsync">X</button>
        </div>
        <div class="card-body">
            <div class="mb-3">
                <label class="form-label">Name:</label>
                <InputText @bind-Value="_category.Name" class="form-control" placeholder="Category name" @onblur="OnNameBlur" />
                <ValidationMessage For="() => _category.Name" />
            </div>
            <div class="mb-3">
                <label class="form-label">Slug:</label>
                <InputText @bind-Value="_category.Slug" class="form-control" placeholder="Slug name" />
                <ValidationMessage For="() => _category.Slug" />
            </div>
        </div>
        <div class="card-footer d-flex justify-content-between align-items-center">
            <button type="button" class="btn btn-sm btn-default" @onclick="CloseFormAsync">Cancel</button>
            <button type="submit" class="btn btn-sm btn-primary">Save</button>
        </div>
    </div>
</EditForm>
@code {
    [Parameter]
    public Category CategoryFromParent { get; set; }
    [Parameter]
    public EventCallback<MethodResult> OnSaveCategory { get; set; }
    [Parameter]
    public EventCallback OnCloseForm { get; set; }
    private Category _category = new();
    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        _category = CategoryFromParent;
    }
    private async Task SaveCategoryAsync()
    {
        MethodResult result = await CategoryService.SaveCategoryAsync(_category);
        if (result.Status)
        {
            _category = new();
        }
        await OnSaveCategory.InvokeAsync(result);
    }
    private void OnNameBlur()
    {
        if (!string.IsNullOrWhiteSpace(_category.Name))
        {
            _category.Slug = _category.Name.Slugify();
        }
    }
    private async Task CloseFormAsync() => await OnCloseForm.InvokeAsync();
}
